# -*- coding: utf-8 -*-
"""Pendulo Simple

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12eszF_W1Qbi_f4-0rpSqEZQu9CqXmcjl
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

l = 1   # m               # longitud de la cuerda
g = 9.81 # m/s**2           # aceleración gravitacional

r0 = 30                     # posición inicial en grados, 0 < r0 <= 90
r0 = np.radians(r0)         # posición inicial en radianes

w0 = 0                      # velocidad angular inicial

T0 = 0                      # tiempo inicial
Tf = 5                      # tiempo final (s)
dT = 0.0001                  # paso de tiempo
nT = int((Tf-T0)/dT + 1)    # numero de elementos

# vector de tiempo
t = np.linspace(T0,Tf,nT)

# vector de aceleración angular
alfa = np.zeros(len(t))
alfa[0] = -g*np.sin(r0)/l

# vector de velocidad angular
w = np.zeros(len(t))
w[0] = w0

# vector de posición angular
r = np.zeros(len(t))
r[0] = r0

for i, ti in enumerate(t[0:-1]):

  w[i+1] = w[i] + alfa[i]*dT
  r[i+1] = r[i] + w[i]*dT + alfa[i]*dT*dT/2
  alfa[i+1] = -g*np.sin(r[i+1])/l

x = l*np.sin(r)
y = -l*np.cos(r)

marca = 300000
plt.plot(t[0:marca],r[0:marca])
plt.grid()
plt.xlabel('Tiempo (s)')
plt.ylabel('Posicion angular (rads)')
plt.title('Posicion angular vs tiempo')

plt.plot(t[0:marca],w[0:marca])
plt.grid()
plt.xlabel('Tiempo (s)')
plt.ylabel('velocidad angular (rads)')
plt.title('velocidad angular vs Tiempo')

plt.plot(t[0:marca],alfa[0:marca])
plt.grid()
plt.xlabel('Tiempo (s)')
plt.ylabel('Aceleración tangencial (rads)')
plt.title('Aceleración tangencial vs Tiempo')

plt.plot(x[0:marca],y[0:marca])
plt.grid()
ax = plt.gca()
ax.set_aspect('equal', adjustable='box')
plt.xlim([-l,l])
plt.ylim([-l,0])